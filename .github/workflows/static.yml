# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: apt (cached)
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: r-cran-tidyverse r-cran-rmarkdown make fonts-noto-cjk # r-cran-plotly
          version: 1.0
      - name: apt (non-official)
        run: |
          sudo apt install -y -V ca-certificates lsb-release wget
          wget https://apache.jfrog.io/artifactory/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
          sudo apt install -y -V ./apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb
          sudo apt update
          sudo apt install -y -V libarrow-dev # For C++
          sudo apt install -y -V libarrow-glib-dev # For GLib (C)
          sudo apt install -y -V libarrow-dataset-dev # For Apache Arrow Dataset C++
          sudo apt install -y -V libarrow-dataset-glib-dev # For Apache Arrow Dataset GLib (C)
          sudo apt install -y -V libarrow-acero-dev # For Apache Arrow Acero
          sudo apt install -y -V libarrow-flight-dev # For Apache Arrow Flight C++
          sudo apt install -y -V libarrow-flight-glib-dev # For Apache Arrow Flight GLib (C)
          sudo apt install -y -V libarrow-flight-sql-dev # For Apache Arrow Flight SQL C++
          sudo apt install -y -V libarrow-flight-sql-glib-dev # For Apache Arrow Flight SQL GLib (C)
          sudo apt install -y -V libgandiva-dev # For Gandiva C++
          sudo apt install -y -V libgandiva-glib-dev # For Gandiva GLib (C)
          sudo apt install -y -V libparquet-dev # For Apache Parquet C++
          sudo apt install -y -V libparquet-glib-dev # For Apache Parquet GLib (C)
      - name: R arrow
        run: |
          R -q -e 'install.packages("arrow")'
      - name: Checkout
        uses: actions/checkout@v4
      - name: Make
        run: |
          make
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '_site'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
